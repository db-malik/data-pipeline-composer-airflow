steps:
  # Step 1: Install dependencies for testing
  - name: 'python:3.8'
    id: 'install-test-dependencies'
    entrypoint: 'pip'
    args: ['install', '-r', 'requirements-test.txt']

  # Step 2: Run tests on the DAGs using unittest instead of pytest
  - name: 'python:3.8'
    id: 'run-tests'
    entrypoint: 'python'
    args: ['-m', 'unittest', 'discover', '-s', './tests/']
    # The exit code of unittest will determine if the workflow continues
    waitFor: ['install-test-dependencies']

  # Step 3: Copy the DAG files to the Google Cloud Storage bucket used by Composer
  # This step only runs if the test step succeeds.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-dags'
    entrypoint: 'gsutil'
    args: ['-m', 'cp', '-r', './dags/', 'gs://$_COMPOSER_BUCKET/']
    waitFor: ['run-tests']  # This step waits for the 'run-tests' step to complete successfully.

timeout: '1200s'  
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  

substitutions:
  _COMPOSER_BUCKET: ''  # Fill in your Composer bucket
  _COMPOSER_ENV_NAME: ''
  _LOCATION: ''
